//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IC.WCF.Client.ICWcfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ICWcfService._ICWcfService", CallbackContract=typeof(IC.WCF.Client.ICWcfService._ICWcfServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    internal interface _ICWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/_ICWcfService/SendMessage", ReplyAction="http://tempuri.org/_ICWcfService/SendMessageResponse")]
        IC.Core.MessageResponse SendMessage(IC.Core.MessageRequest messageRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/_ICWcfService/SendMessage", ReplyAction="http://tempuri.org/_ICWcfService/SendMessageResponse")]
        System.Threading.Tasks.Task<IC.Core.MessageResponse> SendMessageAsync(IC.Core.MessageRequest messageRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/_ICWcfService/RegisterClient", ReplyAction="http://tempuri.org/_ICWcfService/RegisterClientResponse")]
        void RegisterClient(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/_ICWcfService/RegisterClient", ReplyAction="http://tempuri.org/_ICWcfService/RegisterClientResponse")]
        System.Threading.Tasks.Task RegisterClientAsync(string clientId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface _ICWcfServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/_ICWcfService/SendMessageToClient", ReplyAction="http://tempuri.org/_ICWcfService/SendMessageToClientResponse")]
        IC.Core.MessageResponse SendMessageToClient(IC.Core.MessageRequest messageRequest);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface _ICWcfServiceChannel : IC.WCF.Client.ICWcfService._ICWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class _ICWcfServiceClient : System.ServiceModel.DuplexClientBase<IC.WCF.Client.ICWcfService._ICWcfService>, IC.WCF.Client.ICWcfService._ICWcfService {
        
        public _ICWcfServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public _ICWcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public _ICWcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public _ICWcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public _ICWcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public IC.Core.MessageResponse SendMessage(IC.Core.MessageRequest messageRequest) {
            return base.Channel.SendMessage(messageRequest);
        }
        
        public System.Threading.Tasks.Task<IC.Core.MessageResponse> SendMessageAsync(IC.Core.MessageRequest messageRequest) {
            return base.Channel.SendMessageAsync(messageRequest);
        }
        
        public void RegisterClient(string clientId) {
            base.Channel.RegisterClient(clientId);
        }
        
        public System.Threading.Tasks.Task RegisterClientAsync(string clientId) {
            return base.Channel.RegisterClientAsync(clientId);
        }
    }
}

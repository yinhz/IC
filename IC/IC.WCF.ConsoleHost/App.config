<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
  </startup>
  <system.serviceModel>
    <services>
      <service name="IC.WCF.ICWcfService">
        <endpoint address="net.tcp://localhost:8007/wcftcpservice" binding="netTcpBinding"
          bindingConfiguration="TcpNoSecurity" contract="IC.WCF._ICWcfService" />
        <endpoint address="http://localhost:8006/wcfwsservice" binding="wsHttpBinding"
          bindingConfiguration="HttpNoSecurity" contract="IC.WCF.__ICWcfService" />
        <endpoint binding="mexHttpBinding" bindingConfiguration="" contract="IMetadataExchange" />
        <!--<endpoint address="net.tcp://localhost:8008/wcttcpservice" binding="mexTcpBinding" bindingConfiguration="" contract="IMetadataExchange" />-->
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8006/wcfhttpservice/" />
          </baseAddresses>
        </host>
      </service>
    </services>
    <bindings>
      <netTcpBinding>
        <binding name="TcpNoSecurity" closeTimeout="00:02:00" openTimeout="00:02:00" receiveTimeout="00:10:00" sendTimeout="00:10:00" maxBufferPoolSize="104857600" maxBufferSize="104857600" maxReceivedMessageSize="104857600">
          <readerQuotas maxStringContentLength="104857600" maxArrayLength="104857600" />
          <security mode="None" />
        </binding>
        <binding name="TcpSecurityCert" closeTimeout="00:02:00" openTimeout="00:02:00" receiveTimeout="00:10:00" sendTimeout="00:10:00" maxBufferPoolSize="104857600" maxBufferSize="104857600" maxReceivedMessageSize="104857600">
          <readerQuotas maxStringContentLength="104857600" maxArrayLength="104857600" />
          <security mode="Transport">
            <transport clientCredentialType="Certificate" />
          </security>
        </binding>
      </netTcpBinding>
      <wsHttpBinding>
        <binding name="HttpNoSecurity" closeTimeout="00:02:00" openTimeout="00:02:00" receiveTimeout="00:10:00" sendTimeout="00:02:00" maxBufferPoolSize="104857600" maxReceivedMessageSize="104857600" messageEncoding="Text">
          <readerQuotas maxStringContentLength="104857600" maxArrayLength="104857600" />
          <security mode="None" />
        </binding>
        <binding name="HttpSecurity" closeTimeout="00:02:00" openTimeout="00:02:00" receiveTimeout="00:10:00" sendTimeout="00:02:00" maxBufferPoolSize="104857600" maxReceivedMessageSize="104857600" messageEncoding="Text">
          <readerQuotas maxStringContentLength="104857600" maxArrayLength="104857600" />
          <security mode="Message">
            <message clientCredentialType="UserName" />
          </security>
        </binding>
        <binding name="HttpsSecurity" closeTimeout="00:02:00" openTimeout="00:02:00" receiveTimeout="00:10:00" sendTimeout="00:02:00" maxBufferPoolSize="104857600" maxReceivedMessageSize="104857600" messageEncoding="Text">
          <readerQuotas maxStringContentLength="104857600" maxArrayLength="104857600" />
          <security mode="Transport">
            <transport clientCredentialType="None" />
          </security>
        </binding>
        <binding name="HttpsSecurityCert" closeTimeout="00:02:00" openTimeout="00:02:00" receiveTimeout="00:10:00" sendTimeout="00:02:00" maxBufferPoolSize="104857600" maxReceivedMessageSize="104857600" messageEncoding="Text">
          <readerQuotas maxStringContentLength="104857600" maxArrayLength="104857600" />
          <security mode="TransportWithMessageCredential">
            <transport clientCredentialType="Certificate" />
            <message clientCredentialType="Certificate" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, 
          set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="True" httpsGetEnabled="True"/>
          <!-- To receive exception details in faults for debugging purposes, 
          set the value below to true.  Set to false before deployment 
          to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="True" />
          <!--          
          使用 ServiceThrottlingBehavior 类可控制各种吞吐量设置，这些设置可以让您优化服务性能，以帮助避免应用程序内存不足。
          http://msdn.microsoft.com/zh-cn/library/system.servicemodel.description.servicethrottlingbehavior(v=vs.110).aspx
          MaxConcurrentCalls 属性可限制当前在整个 ServiceHost 中处理的消息数目。默认为处理器计数的 16 倍。 
          MaxConcurrentInstances 属性可限制在整个 ServiceHost 中一次执行的 InstanceContext 对象数。默认为 MaxConcurrentSessions 的值和 MaxConcurrentCalls 值的总和。
          MaxConcurrentSessions 属性可限制 ServiceHost 对象可以接受的会话数。服务主机可接受的最大会话数。 默认为处理器计数的 100 倍。 
          因为运行时负载平衡需要运行应用程序的经验，所以，通过应用程序配置文件使用 ServiceThrottlingBehavior 是修改执行过程以获得最佳服务性能的最常用方法。
          配置文件中使用 <serviceThrottling> 元素来设置此属性的值。
          -->
          <serviceThrottling maxConcurrentCalls="1000" maxConcurrentInstances="1000" maxConcurrentSessions="1000" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
</configuration>